{"ast":null,"code":"var _jsxFileName = \"D:\\\\projects\\\\crypto-tracker\\\\src\\\\App.js\";\nimport React, { Component } from \"react\";\nimport Coins from \"./components/Coins\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      coins_data: [],\n      current_page: 1,\n      total_pages: 0,\n      coins_per_page: 5\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"https://swapi.dev/api/people\").then(response => response.json()).then(data => this.setState({\n      coins_data: data[\"results\"],\n      total_pages: Math.ceil(data[\"results\"].length / this.state.coins_per_page)\n    }));\n  }\n\n  setCurrentPage() {// this.setState({current_page: })\n  }\n\n  render() {\n    let coins_per_page = this.state.coins_per_page;\n    let current_page = this.state.current_page;\n    let last_coin = Math.max(coins_per_page * current_page, this.state.coins_data.length);\n    let coin_arr = this.state.coins_data.slice(last_coin - this.state.coins_per_page, last_coin);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [coin_arr.map((val, inx) => {\n        return /*#__PURE__*/_jsxDEV(Coins, {\n          coin_prop: val\n        }, inx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 18\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"ul\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["D:/projects/crypto-tracker/src/App.js"],"names":["React","Component","Coins","App","constructor","state","coins_data","current_page","total_pages","coins_per_page","componentDidMount","fetch","then","response","json","data","setState","Math","ceil","length","setCurrentPage","render","last_coin","max","coin_arr","slice","map","val","inx"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;;AAEA,MAAMC,GAAN,SAAkBF,SAAlB,CAA4B;AAC1BG,EAAAA,WAAW,GAAG;AACZ;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,UAAU,EAAE,EADD;AAEXC,MAAAA,YAAY,EAAE,CAFH;AAGXC,MAAAA,WAAW,EAAE,CAHF;AAIXC,MAAAA,cAAc,EAAE;AAJL,KAAb;AAMD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,KAAK,CAAC,8BAAD,CAAL,CACGC,IADH,CACSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADtB,EAEGF,IAFH,CAESG,IAAD,IACJ,KAAKC,QAAL,CAAc;AACZV,MAAAA,UAAU,EAAES,IAAI,CAAC,SAAD,CADJ;AAEZP,MAAAA,WAAW,EAAES,IAAI,CAACC,IAAL,CAAUH,IAAI,CAAC,SAAD,CAAJ,CAAgBI,MAAhB,GAAyB,KAAKd,KAAL,CAAWI,cAA9C;AAFD,KAAd,CAHJ;AAQD;;AAEDW,EAAAA,cAAc,GAAE,CACd;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP,QAAIZ,cAAc,GAAC,KAAKJ,KAAL,CAAWI,cAA9B;AACA,QAAIF,YAAY,GAAG,KAAKF,KAAL,CAAWE,YAA9B;AACA,QAAIe,SAAS,GAACL,IAAI,CAACM,GAAL,CAASd,cAAc,GAACF,YAAxB,EAAqC,KAAKF,KAAL,CAAWC,UAAX,CAAsBa,MAA3D,CAAd;AACA,QAAIK,QAAQ,GAAG,KAAKnB,KAAL,CAAWC,UAAX,CAAsBmB,KAAtB,CAA4BH,SAAS,GAAC,KAAKjB,KAAL,CAAWI,cAAjD,EAAgEa,SAAhE,CAAf;AAEA,wBACE;AAAA,iBACGE,QAAQ,CAACE,GAAT,CAAa,CAACC,GAAD,EAAKC,GAAL,KAAW;AACvB,4BAAO,QAAC,KAAD;AAAO,UAAA,SAAS,EAAED;AAAlB,WAA4BC,GAA5B;AAAA;AAAA;AAAA;AAAA,gBAAP;AACD,OAFA,CADH,eAIE;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAUD;;AA1CyB;;AA6C5B,eAAezB,GAAf","sourcesContent":["import React, { Component } from \"react\";\nimport Coins from \"./components/Coins\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      coins_data: [],\n      current_page: 1,\n      total_pages: 0,\n      coins_per_page: 5,\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"https://swapi.dev/api/people\")\n      .then((response) => response.json())\n      .then((data) =>\n        this.setState({\n          coins_data: data[\"results\"],\n          total_pages: Math.ceil(data[\"results\"].length / this.state.coins_per_page)\n        })\n      );\n  }\n  \n  setCurrentPage(){\n    // this.setState({current_page: })\n  }\n\n  render() {\n    let coins_per_page=this.state.coins_per_page;\n    let current_page = this.state.current_page;\n    let last_coin=Math.max(coins_per_page*current_page,this.state.coins_data.length);\n    let coin_arr = this.state.coins_data.slice(last_coin-this.state.coins_per_page,last_coin);\n\n    return (\n      <div>\n        {coin_arr.map((val,inx)=>{\n          return <Coins coin_prop={val} key={inx} />;\n        })}\n        <ul>\n\n        </ul>\n      </div>\n    )\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}